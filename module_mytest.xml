<?xml version="1.0" encoding="UTF-8"?>
<project name="module_mytest" default="compile.module.mytest">
  <dirname property="module.mytest.basedir" file="${ant.file.module_mytest}"/>
  
  <property name="module.jdk.home.mytest" value="${jdk.home.1.8}"/>
  <property name="module.jdk.bin.mytest" value="${jdk.bin.1.8}"/>
  <property name="module.jdk.classpath.mytest" value="jdk.classpath.1.8"/>
  
  <property name="compiler.args.mytest" value="-encoding UTF-8 -source 1.3 -target 1.3 ${compiler.args}"/>
  
  <property name="mytest.output.dir" value="${module.mytest.basedir}/out/production/mytest"/>
  <property name="mytest.testoutput.dir" value="${module.mytest.basedir}/out/test/mytest"/>
  
  <path id="mytest.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="mytest.module.production.classpath">
    <path refid="${module.jdk.classpath.mytest}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="mytest.runtime.production.module.classpath">
    <pathelement location="${mytest.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="mytest.module.classpath">
    <path refid="${module.jdk.classpath.mytest}"/>
    <pathelement location="${mytest.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  <path id="mytest.runtime.module.classpath">
    <pathelement location="${mytest.testoutput.dir}"/>
    <pathelement location="${mytest.output.dir}"/>
    <path refid="library.lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.mytest">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.mytest">
    <patternset refid="excluded.from.module.mytest"/>
  </patternset>
  
  <path id="mytest.module.sourcepath">
    <dirset dir="${module.mytest.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.mytest" depends="compile.module.mytest.production,compile.module.mytest.tests" description="Compile module mytest"/>
  
  <target name="compile.module.mytest.production" depends="register.custom.compilers" description="Compile module mytest; production classes">
    <mkdir dir="${mytest.output.dir}"/>
    <javac2 destdir="${mytest.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.mytest}/javac">
      <compilerarg line="${compiler.args.mytest}"/>
      <bootclasspath refid="mytest.module.bootclasspath"/>
      <classpath refid="mytest.module.production.classpath"/>
      <src refid="mytest.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.mytest"/>
    </javac2>
    
    <copy todir="${mytest.output.dir}">
      <fileset dir="${module.mytest.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.mytest.tests" depends="register.custom.compilers,compile.module.mytest.production" description="compile module mytest; test classes" unless="skip.tests"/>
  
  <target name="clean.module.mytest" description="cleanup module">
    <delete dir="${mytest.output.dir}"/>
    <delete dir="${mytest.testoutput.dir}"/>
  </target>
</project>